(function(n){function e(e){for(var r,s,l=e[0],o=e[1],u=e[2],m=0,p=[];m<l.length;m++)s=l[m],Object.prototype.hasOwnProperty.call(a,s)&&a[s]&&p.push(a[s][0]),a[s]=0;for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(n[r]=o[r]);c&&c(e);while(p.length)p.shift()();return i.push.apply(i,u||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,l=1;l<t.length;l++){var o=t[l];0!==a[o]&&(r=!1)}r&&(i.splice(e--,1),n=s(s.s=t[0]))}return n}var r={},a={index:0},i=[];function s(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=n,s.c=r,s.d=function(n,e,t){s.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},s.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},s.t=function(n,e){if(1&e&&(n=s(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)s.d(t,r,function(e){return n[e]}.bind(null,r));return t},s.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return s.d(e,"a",e),e},s.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},s.p="";var l=window["webpackJsonp"]=window["webpackJsonp"]||[],o=l.push.bind(l);l.push=e,l=l.slice();for(var u=0;u<l.length;u++)e(l[u]);var c=o;i.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("4913")},"1b8c":function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description <pre>数组打乱排序\n * 方案一(伪): Array.sort(() => Math.random() - 0.5) 伪打乱排序, 每个元素都有大概率处在原来的位置\n * 方案二(正): 随机下标交换, 交换次数为 Array.length, 可随时增加循环次数</pre>\n * @tag 代码片段\n * @tag 数组\n * @level 较难\n * @param arr {Array} 输入一个长度不确定的数组, 可能存在重复项\n */",meta:{range:[245,487],filename:"ccst5n7r17vphrr6pqmfi7.js",lineno:10,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"arrayShuffle",type:"FunctionDeclaration",paramnames:["arr"]},vars:{i:"arrayShuffle~i",randomIdx:"arrayShuffle~randomIdx",tmp:"arrayShuffle~tmp","arr[undefined]":null}},description:"<pre>数组打乱排序\n方案一(伪): Array.sort(() => Math.random() - 0.5) 伪打乱排序, 每个元素都有大概率处在原来的位置\n方案二(正): 随机下标交换, 交换次数为 Array.length, 可随时增加循环次数</pre>",tags:[{originalTitle:"tag",title:"tag",text:"代码片段",value:"代码片段"},{originalTitle:"tag",title:"tag",text:"数组",value:"数组"},{originalTitle:"level",title:"level",text:"较难",value:"较难"}],params:[{type:{names:["Array"]},description:"输入一个长度不确定的数组, 可能存在重复项",name:"arr"}],name:"arrayShuffle",longname:"arrayShuffle",kind:"function",scope:"global"},code:"function arrayShuffle(arr) {\n  var i = arr.length;\n\n  while (i >= 0) {\n    var randomIdx = Math.floor(Math.random() * i--);\n    var tmp = arr[i];\n    arr[i] = arr[randomIdx];\n    arr[randomIdx] = tmp;\n  }\n\n  return [];\n}\n\nexport default arrayShuffle;",tscode:"function arrayShuffle<T>(arr: Array<T>): Array<T> {\n    let i = arr.length;\n    while (i >= 0) {\n        let randomIdx = Math.floor(Math.random() * i--);\n        let tmp = arr[i];\n        arr[i] = arr[randomIdx];\n        arr[randomIdx] = tmp;\n    }\n    return [];\n}\nexport default arrayShuffle;\n"}},3744:function(n,e,t){},4913:function(n,e,t){"use strict";t.r(e);t("e260"),t("e6cf"),t("cca6"),t("a79d");var r=t("2b0e"),a=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"main-container"},[t("div",{staticClass:"title"},[n._v(" Questions ")]),t("div",{staticClass:"sort-ctn"},[t("form",{staticClass:"sort-form",attrs:{action:"/"}},[t("div",[t("label",{attrs:{for:"level"}},[n._v("难度")]),t("select",{directives:[{name:"model",rawName:"v-model",value:n.selectLevel,expression:"selectLevel"}],attrs:{name:"level",id:"level"},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){var e="_value"in n?n._value:n.value;return e}));n.selectLevel=e.target.multiple?t:t[0]}}},n._l(n.levelQuery,(function(e,r){return t("option",{key:r,domProps:{value:e.value}},[n._v(n._s(e.label))])})),0)]),t("div",[t("label",{attrs:{for:"level"}},[n._v("标签")]),t("select",{directives:[{name:"model",rawName:"v-model",value:n.selectTag,expression:"selectTag"}],attrs:{name:"tag",id:"tag"},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){var e="_value"in n?n._value:n.value;return e}));n.selectTag=e.target.multiple?t:t[0]}}},n._l(n.tagQuery,(function(e,r){return t("option",{key:r,domProps:{value:e.value}},[n._v(n._s(e.label))])})),0)])])]),t("div",{staticClass:"question-list"},n._l(n.sortedQuestion,(function(n,e){return t("Question",{key:e,staticClass:"question-item",attrs:{question:n}})})),1)])},i=[],s=(t("a623"),t("4de4"),t("4160"),t("13d5"),t("159b"),t("d81d"),t("d3b7"),t("ddb0"),[]),l=function(n){return n.keys().map(n)},o=t("9f98");l(o).forEach((function(n){s.push(n.default)}));var u=s,c=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"c-question"},[t("div",{staticClass:"question-info"},[n.level||n.tags&&n.tags.length?t("div",{staticClass:"top-row"},[n.level?t("div",{staticClass:"level-info row"},[t("div",{staticClass:"title"},[n._v("难度")]),t("div",{staticClass:"content"},[t("span",{staticClass:"tag"},[n._v(n._s(n.level))])])]):n._e(),n.tags&&n.tags.length?t("div",{staticClass:"tag-ctn row"},[t("ul",{staticClass:"tag-list"},n._l(n.tags,(function(e,r){return t("li",{key:r,staticClass:"tag-item"},[t("span",{staticClass:"tag"},[n._v(n._s(e.value))])])})),0)]):n._e()]):n._e(),t("div",{staticClass:"question-description row"},[t("div",{staticClass:"title"},[n._v("题目")]),t("div",{staticClass:"content description",domProps:{innerHTML:n._s(n.description)}})]),t("div",{staticClass:"question-params row"},[t("div",{staticClass:"title"},[n._v("输入")]),t("div",{staticClass:"content"},[t("table",[n._m(0),t("tbody",n._l(n.params,(function(e,r){return t("tr",{key:r},[t("td",[n._v(n._s(e.name||"undefined"))]),t("td",[n._v(" "+n._s(e.type&&e.type.names?e.type.names.join(","):"any")+" ")]),t("td",[n._v(n._s(e.description||"undefined"))])])})),0)])])]),t("div",{staticClass:"question-returns row"},[t("div",{staticClass:"title"},[n._v("输出")]),t("div",{staticClass:"content"},[t("table",[n._m(1),t("tbody",n._l(n.returns,(function(e,r){return t("tr",{key:r},[t("td",[n._v(" "+n._s(e.type&&e.type.names?e.type.names.join(","):"any")+" ")]),t("td",[n._v(n._s(e.description||"undefined"))])])})),0)])])])]),t("div",{staticClass:"code"},[n.openCode?t("Codemirror",{attrs:{value:n.question.code,options:n.cmOptions}}):n._e(),t("a",{staticClass:"toggle-code-btn",attrs:{href:""},on:{click:function(e){e.preventDefault(),n.openCode=!n.openCode}}},[n._v(n._s(n.openCode?"收起代码 ↑":"查看代码 ↓"))])],1)])},m=[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("thead",[t("tr",[t("th",[n._v("参数名")]),t("th",[n._v("类型")]),t("th",[n._v("描述")])])])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("thead",[t("tr",[t("th",[n._v("类型")]),t("th",[n._v("描述")])])])}],p=(t("a4d3"),t("e01a"),t("7db0"),t("8f94")),d=(t("f9d4"),{components:{Codemirror:p["codemirror"]},props:{question:{}},data:function(){return{openCode:!1,cmOptions:{theme:"monokai",mode:"text/javascript",styleActiveLine:!0,lineNumbers:!0,line:!0,styleSelectedText:!0,disableInput:!0,lineWrapping:!0,foldGutter:!0}}},computed:{description:function(){return this.question.comment.description},params:function(){return this.question.comment.params},returns:function(){return this.question.comment.returns},level:function(){var n=this.question.comment.tags||[],e=n.find((function(n){return"level"===n.title}));return e?e.value:null},tags:function(){var n=this.question.comment.tags||[];return n.filter((function(n){return"tag"===n.title}))}}}),f=d,g=(t("8ad6"),t("b31c"),t("2877")),h=Object(g["a"])(f,c,m,!1,null,"7edd2fea",null),v=h.exports,y={components:{Question:v},data:function(){return{questions:u,selectLevel:"",selectTag:""}},computed:{questionsCount:function(){return this.questions.length},levelQuery:function(){return(this.questions||[]).reduce((function(n,e){var t=e.comment.tags||[];return t.forEach((function(e){"level"===e.title&&n.every((function(n){return n.value!==e.value}))&&n.push({label:e.value,value:e.value})})),n}),[{label:"全部",value:""}])},tagQuery:function(){return(this.questions||[]).reduce((function(n,e){var t=e.comment.tags||[];return t.forEach((function(e){"tag"===e.title&&n.every((function(n){return n.value!==e.value}))&&n.push({label:e.value,value:e.value})})),n}),[{label:"全部",value:""}])},sortedQuestion:function(){var n=this;return this.questions.filter((function(e){var t=e.comment.tags||[];return(!n.selectLevel||!t.every((function(e){return e.value!==n.selectLevel})))&&(!n.selectTag||!t.every((function(e){return e.value!==n.selectTag})))}))}}},b=y,x=(t("7789"),t("7991"),Object(g["a"])(b,a,i,!1,null,"272d9964",null)),C=x.exports;r["a"].config.productionTip=!1,new r["a"]({render:function(n){return n(C)}}).$mount("#app")},"4d96":function(n,e,t){},"60dc":function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description <pre>有这样一道智力题：\n *   “某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”\n * 答案是5瓶，方法如下：\n *   先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的\n *   这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。\n * 如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？\n * @level 普通\n * @tag 数学\n * @tag 递归\n * @param n {Number} 小张初始拥有的饮料瓶数量\n * @returns {Number} 小张能喝到的饮料数量\n */",meta:{range:[346,564],filename:"fe2rv589bcgjb11c7gze9j.js",lineno:14,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"calcDrinks",type:"FunctionDeclaration",paramnames:["n"]},vars:{drinks:"calcDrinks~drinks",lasts:"calcDrinks~lasts"}},description:"<pre>有这样一道智力题：\n  “某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”\n答案是5瓶，方法如下：\n  先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的\n  这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。\n如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？",tags:[{originalTitle:"level",title:"level",text:"普通",value:"普通"},{originalTitle:"tag",title:"tag",text:"数学",value:"数学"},{originalTitle:"tag",title:"tag",text:"递归",value:"递归"}],params:[{type:{names:["Number"]},description:"小张初始拥有的饮料瓶数量",name:"n"}],returns:[{type:{names:["Number"]},description:"小张能喝到的饮料数量"}],name:"calcDrinks",longname:"calcDrinks",kind:"function",scope:"global"},code:"function calcDrinks(n) {\n  if (n === 1) {\n    return 0;\n  }\n\n  if (n == 2) {\n    return 1;\n  }\n\n  var drinks = Math.floor(n / 3);\n  var lasts = n % 3;\n  return drinks + calcDrinks(drinks + lasts);\n}\n\nexport default calcDrinks;",tscode:"function calcDrinks(n: number): number {\n    if (n === 1) {\n        return 0;\n    }\n    if (n == 2) {\n        return 1;\n    }\n    let drinks: number = Math.floor(n / 3);\n    let lasts: number = n % 3;\n    return drinks + calcDrinks(drinks + lasts);\n}\nexport default calcDrinks;\n"}},"772e":function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description <pre>编写一个程序，将输入字符串中的字符按如下规则排序。\n * 规则 1 ：英文字母从 A 到 Z 排列，不区分大小写。如，输入： Type 输出： epTy\n * 规则 2 ：同一个英文字母的大小写同时存在时，按照输入顺序排列。如，输入： BabA 输出： aABb\n * 规则 3 ：非英文字母的其它字符保持原来的位置。如，输入： By?e 输出： Be?y </pre>\n * @param str {String} 一长串字符串\n * @tag 字符串处理\n * @tag 应用题\n * @tag 选择排序\n * @level 普通\n * @returns {String} 排好序的字符串\n */",meta:{range:[326,818],filename:"kjhbxe57anl02llrqct78.js",lineno:13,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"sortCharacters",type:"FunctionDeclaration",paramnames:["str"]},vars:{_a:"sortCharacters~_a",result:"sortCharacters~result",symObj:"sortCharacters~symObj",i:"sortCharacters~i",minIdx:"sortCharacters~minIdx"}},description:"<pre>编写一个程序，将输入字符串中的字符按如下规则排序。\n规则 1 ：英文字母从 A 到 Z 排列，不区分大小写。如，输入： Type 输出： epTy\n规则 2 ：同一个英文字母的大小写同时存在时，按照输入顺序排列。如，输入： BabA 输出： aABb\n规则 3 ：非英文字母的其它字符保持原来的位置。如，输入： By?e 输出： Be?y </pre>",params:[{type:{names:["String"]},description:"一长串字符串",name:"str"}],tags:[{originalTitle:"tag",title:"tag",text:"字符串处理",value:"字符串处理"},{originalTitle:"tag",title:"tag",text:"应用题",value:"应用题"},{originalTitle:"tag",title:"tag",text:"选择排序",value:"选择排序"},{originalTitle:"level",title:"level",text:"普通",value:"普通"}],returns:[{type:{names:["String"]},description:"排好序的字符串"}],name:"sortCharacters",longname:"sortCharacters",kind:"function",scope:"global"},code:"function sortCharacters(str) {\n  var _a = getSymbols(str),\n      result = _a[0],\n      symObj = _a[1];\n\n  for (var i = 0; i < result.length; i++) {\n    var minIdx = findMin(result.slice(i))[0];\n    minIdx = minIdx + i;\n\n    if (minIdx > i) {\n      result = setLetters(result, minIdx, i);\n    }\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    if (symObj[i]) {\n      result = [result.slice(0, i), result.slice(i)].join(symObj[i]);\n    }\n  }\n\n  return result;\n}\n\nfunction getSymbols(str) {\n  var result = str;\n  var symObj = {};\n\n  for (var i = str.length - 1; i >= 0; i--) {\n    var char = result[i];\n\n    if (!isLetter(char)) {\n      symObj[i] = char;\n      result = [result.slice(0, i), result.slice(i + 1)].join('');\n    }\n  }\n\n  return [result, symObj];\n}\n\nfunction isLetter(a) {\n  var charCode = a.charCodeAt(0);\n\n  if (charCode < 65 || charCode > 122 || charCode > 90 && charCode < 97) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction sortLetters(a, b) {\n  if (!isLetter(a) || !isLetter(b)) {\n    return 100;\n  }\n\n  return a.toLowerCase().charCodeAt(0) - b.toLowerCase().charCodeAt(0);\n}\n\nfunction findMin(str) {\n  var minIdx = -1;\n  var min = str[0];\n\n  for (var i = 1; i < str.length; i++) {\n    if (sortLetters(str[i], min) < 0) {\n      min = str[i];\n      minIdx = i;\n    }\n  }\n\n  return [minIdx, min];\n}\n\nfunction setLetters(str, fromIdx, toIdx) {\n  var result = str;\n  var letter = str[fromIdx];\n  result = [result.slice(0, fromIdx), result.slice(fromIdx + 1)].join('');\n  result = [result.slice(0, toIdx), result.slice(toIdx)].join(letter);\n  return result;\n}\n\nexport default sortCharacters;",tscode:'function sortCharacters(str: string): string {\n    let [result, symObj] = getSymbols(str);\n    for (let i = 0; i < result.length; i++) {\n        let [minIdx] = findMin(result.slice(i));\n        minIdx = minIdx + i;\n        if (minIdx > i) {\n            result = setLetters(result, minIdx, i);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (symObj[i]) {\n            result = [result.slice(0, i), result.slice(i)].join(symObj[i]);\n        }\n    }\n    return result;\n}\nfunction getSymbols(str: string): [\n    string,\n    Object\n] {\n    let result = str;\n    let symObj = {};\n    for (let i = str.length - 1; i >= 0; i--) {\n        let char = result[i];\n        if (!isLetter(char)) {\n            symObj[i] = char;\n            result = [result.slice(0, i), result.slice(i + 1)].join("");\n        }\n    }\n    return [result, symObj];\n}\nfunction isLetter(a: string): boolean {\n    let charCode = a.charCodeAt(0);\n    if (charCode < 65 || charCode > 122 || (charCode > 90 && charCode < 97)) {\n        return false;\n    }\n    return true;\n}\nfunction sortLetters(a: string, b: string): number {\n    if (!isLetter(a) || !isLetter(b)) {\n        return 100;\n    }\n    return a.toLowerCase().charCodeAt(0) - b.toLowerCase().charCodeAt(0);\n}\nfunction findMin(str: string): [\n    number,\n    string\n] {\n    let minIdx = -1;\n    let min = str[0];\n    for (let i = 1; i < str.length; i++) {\n        if (sortLetters(str[i], min) < 0) {\n            min = str[i];\n            minIdx = i;\n        }\n    }\n    return [minIdx, min];\n}\nfunction setLetters(str: string, fromIdx: number, toIdx: number): string {\n    let result = str;\n    let letter = str[fromIdx];\n    result = [result.slice(0, fromIdx), result.slice(fromIdx + 1)].join("");\n    result = [result.slice(0, toIdx), result.slice(toIdx)].join(letter);\n    return result;\n}\nexport default sortCharacters;\n'}},7789:function(n,e,t){"use strict";var r=t("b910"),a=t.n(r);a.a},7991:function(n,e,t){"use strict";var r=t("3744"),a=t.n(r);a.a},"7bc9":function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description 把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法\n * @param appleCount {Number} 苹果数量\n * @param dishCount {Number} 盘子数量\n * @tag 递归\n * @tag 动态规划\n * @tag 数学\n * @level 略难\n * @returns {Number} 共有多少种分法\n */",meta:{range:[237,493],filename:"2rwv7m26fw9ofncgwzecmi.js",lineno:11,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"putApple",type:"FunctionDeclaration",paramnames:["appleCount","dishCount"]}},description:"把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法",params:[{type:{names:["Number"]},description:"苹果数量",name:"appleCount"},{type:{names:["Number"]},description:"盘子数量",name:"dishCount"}],tags:[{originalTitle:"tag",title:"tag",text:"递归",value:"递归"},{originalTitle:"tag",title:"tag",text:"动态规划",value:"动态规划"},{originalTitle:"tag",title:"tag",text:"数学",value:"数学"},{originalTitle:"level",title:"level",text:"略难",value:"略难"}],returns:[{type:{names:["Number"]},description:"共有多少种分法"}],name:"putApple",longname:"putApple",kind:"function",scope:"global"},code:"function putApple(appleCount, dishCount) {\n  if (dishCount < 1 || appleCount < 0) {\n    return 0;\n  }\n\n  if (dishCount === 1) {\n    return 1;\n  }\n\n  return putApple(appleCount, dishCount - 1) + putApple(appleCount - dishCount, dishCount);\n}\n\nexport default putApple;",tscode:"function putApple(appleCount: number, dishCount: number): number {\n    if (dishCount < 1 || appleCount < 0) {\n        return 0;\n    }\n    if (dishCount === 1) {\n        return 1;\n    }\n    return putApple(appleCount, dishCount - 1) + putApple(appleCount - dishCount, dishCount);\n}\nexport default putApple;\n"}},"811d":function(n,e,t){},"8ad6":function(n,e,t){"use strict";var r=t("811d"),a=t.n(r);a.a},"9f98":function(n,e,t){var r={"./array-shuffle.ts":"1b8c","./axis-move.ts":"cd8c","./binary-include-1.ts":"ca62","./calc-drinks.ts":"60dc","./chorus-queue.ts":"cfc9","./last-word-length.ts":"a107","./put-apple.ts":"7bc9","./sort-characters.ts":"772e"};function a(n){var e=i(n);return t(e)}function i(n){if(!t.o(r,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return r[n]}a.keys=function(){return Object.keys(r)},a.resolve=i,n.exports=a,a.id="9f98"},a107:function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description 计算字符串最后一个单词的长度，单词以空格隔开\n * @level 简单\n * @param str {String} 一行字符串，非空，长度小于5000\n * @returns {Number} 整数N，最后一个单词的长度\n */",meta:{range:[136,263],filename:"ca08q8c5tgplatt52l0v4i.js",lineno:7,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"lastWordLength",type:"FunctionDeclaration",paramnames:["str"]},vars:{parseStr:"lastWordLength~parseStr"}},description:"计算字符串最后一个单词的长度，单词以空格隔开",tags:[{originalTitle:"level",title:"level",text:"简单",value:"简单"}],params:[{type:{names:["String"]},description:"一行字符串，非空，长度小于5000",name:"str"}],returns:[{type:{names:["Number"]},description:"整数N，最后一个单词的长度"}],name:"lastWordLength",longname:"lastWordLength",kind:"function",scope:"global"},code:"function lastWordLength(str) {\n  var parseStr = str.toString();\n  return parseStr.length - parseStr.lastIndexOf(' ') - 1;\n}\n\nexport default lastWordLength;",tscode:'function lastWordLength(str: any): number {\n    let parseStr: String = str.toString();\n    return parseStr.length - parseStr.lastIndexOf(" ") - 1;\n}\nexport default lastWordLength;\n'}},b31c:function(n,e,t){"use strict";var r=t("4d96"),a=t.n(r);a.a},b910:function(n,e,t){},ca62:function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description 输入一个int型的正整数，计算出该int型数据在内存中存储时1的个数。\n * @tag 位运算\n * @level 简单\n * @param num {Number} 输入一个整数（int类型）\n * @returns {Number} 这个数转换成2进制后，输出1的个数\n */",meta:{range:[161,356],filename:"3nipkg3iiwouwk6jvx5x5.js",lineno:8,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"binaryInclude1",type:"FunctionDeclaration",paramnames:["num"]},vars:{cur:"binaryInclude1~cur",count:"binaryInclude1~count"}},description:"输入一个int型的正整数，计算出该int型数据在内存中存储时1的个数。",tags:[{originalTitle:"tag",title:"tag",text:"位运算",value:"位运算"},{originalTitle:"level",title:"level",text:"简单",value:"简单"}],params:[{type:{names:["Number"]},description:"输入一个整数（int类型）",name:"num"}],returns:[{type:{names:["Number"]},description:"这个数转换成2进制后，输出1的个数"}],name:"binaryInclude1",longname:"binaryInclude1",kind:"function",scope:"global"},code:"function binaryInclude1(num) {\n  var cur = num;\n  var count = 0;\n\n  while (cur > 0) {\n    if (cur % 2) {\n      count++;\n    }\n\n    cur = cur >>> 1;\n  }\n\n  return count;\n}\n\nexport default binaryInclude1;",tscode:"function binaryInclude1(num: number): number {\n    let cur: number = num;\n    let count = 0;\n    while (cur > 0) {\n        if (cur % 2) {\n            count++;\n        }\n        cur = cur >>> 1;\n    }\n    return count;\n}\nexport default binaryInclude1;\n"}},cd8c:function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description <pre>开发一个坐标计算工具， A表示向左移动，D表示向右移动，W表示向上移动，S表示向下移动。从（0,0）点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。\n * 输入：\n *    1. 合法坐标为A(或者D或者W或者S) + 数字（两位以内）, 坐标之间以;分隔。\n *    2. 非法坐标点需要进行丢弃。如AA10;  A1A;  $%$;  YAD; 等。\n * 下面是一个简单的例子 如： A10;S20;W10;D30;X;A1A;B10A11;;A10; .\n * 处理过程：\n *    起点（0,0）->\n *    A10   =  （-10,0）->\n *    S20   =  (-10,-20)->\n *    W10  =  (-10,-10)->\n *    D30  =  (20,-10)->\n *    x    =  无效 ->\n *    A1A   =  无效 ->\n *    B10A11   =  无效 ->\n *    一个空 不影响 ->\n *    A10  =  (10,-10) ->\n * 结果 （10， -10） </pre>\n * @tag 字符串处理\n * @tag 正则\n * @tag 应用题\n * @level 普通\n * @param paths {String}\n * @returns {Array} [x坐标值, y坐标值]\n */",meta:{range:[645,1605],filename:"hb4tbuxoiappomrdcvixys.js",lineno:26,columnno:0,path:"/tmp",code:{id:"astnode100000002",name:"axisMove",type:"FunctionDeclaration",paramnames:["paths"]},vars:{stepReg:"axisMove~stepReg",match:"axisMove~match","":null,pos:"axisMove~pos"}},description:"<pre>开发一个坐标计算工具， A表示向左移动，D表示向右移动，W表示向上移动，S表示向下移动。从（0,0）点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。\n输入：\n   1. 合法坐标为A(或者D或者W或者S) + 数字（两位以内）, 坐标之间以;分隔。\n   2. 非法坐标点需要进行丢弃。如AA10;  A1A;  $%$;  YAD; 等。\n下面是一个简单的例子 如： A10;S20;W10;D30;X;A1A;B10A11;;A10; .\n处理过程：\n   起点（0,0）->\n   A10   =  （-10,0）->\n   S20   =  (-10,-20)->\n   W10  =  (-10,-10)->\n   D30  =  (20,-10)->\n   x    =  无效 ->\n   A1A   =  无效 ->\n   B10A11   =  无效 ->\n   一个空 不影响 ->\n   A10  =  (10,-10) ->\n结果 （10， -10） </pre>",tags:[{originalTitle:"tag",title:"tag",text:"字符串处理",value:"字符串处理"},{originalTitle:"tag",title:"tag",text:"正则",value:"正则"},{originalTitle:"tag",title:"tag",text:"应用题",value:"应用题"},{originalTitle:"level",title:"level",text:"普通",value:"普通"}],params:[{type:{names:["String"]},name:"paths"}],returns:[{type:{names:["Array"]},description:"[x坐标值, y坐标值]"}],name:"axisMove",longname:"axisMove",kind:"function",scope:"global"},code:"function axisMove(paths) {\n  var stepReg = /^(\\w{1})(\\d{1,2})$/i;\n  var match = paths.split(';').filter(function (i) {\n    return !!i;\n  });\n  var pos = {\n    x: 0,\n    y: 0\n  };\n\n  if (match && match.length) {\n    match.forEach(function (p) {\n      var match = p.match(stepReg);\n\n      if (match) {\n        switch (match[1]) {\n          case 'w':\n          case 'W':\n            pos.y += +match[2];\n            break;\n\n          case 's':\n          case 'S':\n            pos.y -= +match[2];\n            break;\n\n          case 'A':\n          case 'a':\n            pos.x -= +match[2];\n            break;\n\n          case 'd':\n          case 'D':\n            pos.x += +match[2];\n            break;\n        }\n      }\n    });\n  }\n\n  return [pos.x, pos.y];\n}\n\nexport default axisMove;",tscode:'function axisMove(paths: string): [\n    number,\n    number\n] {\n    let stepReg = /^(\\w{1})(\\d{1,2})$/i;\n    let match = paths.split(";").filter(i => !!i);\n    let pos = { x: 0, y: 0 };\n    if (match && match.length) {\n        match.forEach(p => {\n            let match = p.match(stepReg);\n            if (match) {\n                switch (match[1]) {\n                    case "w":\n                    case "W":\n                        pos.y += +match[2];\n                        break;\n                    case "s":\n                    case "S":\n                        pos.y -= +match[2];\n                        break;\n                    case "A":\n                    case "a":\n                        pos.x -= +match[2];\n                        break;\n                    case "d":\n                    case "D":\n                        pos.x += +match[2];\n                        break;\n                }\n            }\n        });\n    }\n    return [pos.x, pos.y];\n}\nexport default axisMove;\n'}},cfc9:function(n,e,t){"use strict";t.r(e),e["default"]={comment:{comment:"/**\n * @description <pre>\n * 计算最少出列多少位同学，使得剩下的同学排成合唱队形说明：\n * N位同学站成一排，音乐老师要请其中的(N-K)位同学出列，使得剩下的K位同学排成合唱队形。\n * 合唱队形是指这样的一种队形：设K位同学从左到右依次编号为1，2…，K，他们的身高分别为T1，T2，…，TK，   则他们的身高满足存在i（1<=i<=K）使得T1<T2<......<Ti-1<Ti>Ti+1>......>TK。\n * 你的任务是，已知所有N位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。\n * </pre>\n * @tag 递归\n * @tag 动态规划\n * @tag 最长上升子序列\n * @level 非常难\n * @param arr {Array.number} 身高数字队列, 单位 cm, 例如 [180, 175, 160]\n * @returns {number} 最少需要删除几位同学\n */",meta:{range:[768,1084],filename:"wqzewue2afgllm3lah6ge.js",lineno:22,columnno:0,path:"/tmp",code:{id:"astnode100000090",name:"checkQueue",type:"FunctionDeclaration",paramnames:["arr"]},vars:{upFlag:"checkQueue~upFlag",i:"checkQueue~i"}},description:"<pre>\n计算最少出列多少位同学，使得剩下的同学排成合唱队形说明：\nN位同学站成一排，音乐老师要请其中的(N-K)位同学出列，使得剩下的K位同学排成合唱队形。\n合唱队形是指这样的一种队形：设K位同学从左到右依次编号为1，2…，K，他们的身高分别为T1，T2，…，TK，   则他们的身高满足存在i（1<=i<=K）使得T1<T2<......<Ti-1<Ti>Ti+1>......>TK。\n你的任务是，已知所有N位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。\n</pre>",tags:[{originalTitle:"tag",title:"tag",text:"递归",value:"递归"},{originalTitle:"tag",title:"tag",text:"动态规划",value:"动态规划"},{originalTitle:"tag",title:"tag",text:"最长上升子序列",value:"最长上升子序列"},{originalTitle:"level",title:"level",text:"非常难",value:"非常难"}],params:[{type:{names:["Array.number"]},description:"身高数字队列, 单位 cm, 例如 [180, 175, 160]",name:"arr"}],returns:[{type:{names:["number"]},description:"最少需要删除几位同学"}],name:"checkQueue",longname:"checkQueue",kind:"function",scope:"global"},code:"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nfunction checkQueue(arr) {\n  var upFlag = arr[0] - arr[1] < 0;\n\n  for (var i = 0; i < arr.length - 1; i++) {\n    if (!upFlag && arr[i] < arr[i + 1] || arr[i] === arr[i + 1]) {\n      return false;\n    }\n\n    if (arr[i] > arr[i + 1]) {\n      upFlag = false;\n    }\n  }\n\n  return true;\n}\n\nfunction chorusQueue(heightArrar) {\n  if (checkQueue(heightArrar)) {\n    return heightArrar.length;\n  }\n\n  var result = heightArrar.map(function (h, idx) {\n    return chorusQueue(__spreadArrays(heightArrar.slice(0, idx), heightArrar.slice(idx + 1)));\n  }).map(function (i) {\n    return i ? i.length : 0;\n  });\n  return Math.max.apply(Math, result);\n}\n\nexport default chorusQueue;",tscode:"function checkQueue(arr) {\n    let upFlag = arr[0] - arr[1] < 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (!upFlag && arr[i] < arr[i + 1] || arr[i] === arr[i + 1]) {\n            return false;\n        }\n        if (arr[i] > arr[i + 1]) {\n            upFlag = false;\n        }\n    }\n    return true;\n}\nfunction chorusQueue(heightArrar) {\n    if (checkQueue(heightArrar)) {\n        return heightArrar.length;\n    }\n    let result = heightArrar.map((h, idx) => chorusQueue([...heightArrar.slice(0, idx), ...heightArrar.slice(idx + 1)])).map(i => i ? i.length : 0);\n    return Math.max(...result);\n}\nexport default chorusQueue;\n"}}});
//# sourceMappingURL=index.744c8c60.js.map